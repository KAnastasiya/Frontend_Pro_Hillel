!function(e){function t(i){if(r[i])return r[i].exports;var n=r[i]={exports:{},id:i,loaded:!1};return e[i].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){e.exports=r(1)},function(e,t){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,r,i){return r&&e(t.prototype,r),i&&e(t,i),t}}(),n={canvasList:document.querySelector(".drawing-tool__canvases"),strokeColor:document.querySelector(".input--stroke-color"),fillColor:document.querySelector(".input--fill-color"),lineWeight:document.querySelector(".select--line-weight"),tools:document.querySelector(".field--tools"),toolsList:document.querySelectorAll(".custom-radio"),toolPencilWrapper:document.querySelector(".custom-radio--pencil"),toolPencil:document.querySelector(".input--pencil"),save:document.querySelector(".btn--save"),clear:document.querySelector(".btn--clear")},o="custom-radio--checked",s=550,a=550,c=void 0,l=[],u=void 0,d=void 0,h=void 0,v=function(){function e(t,i){r(this,e),this.startX=t,this.startY=i,this.endX=this.startX,this.endY=this.startY}return i(e,[{key:"initLayer",value:function(e){this.ctx=e.getContext("2d"),this.ctx.beginPath(),this.ctx.moveTo(this.startX,this.startY),u=1===l.length?this.ctx:u,h=u}},{key:"drawDot",value:function(e){var t=n.lineWeight.selectedIndex;this.ctx||(this.ctx=h,this.ctx.beginPath()),h=this.ctx,this.ctx.lineWidth=n.lineWeight.options[t].value,this.ctx.strokeStyle=e,this.ctx.lineTo(this.endX,this.endY),this.ctx.stroke()}},{key:"drawShapes",value:function(e){var t=n.lineWeight.selectedIndex;if(this.ctx.clearRect(0,0,s,a),this.ctx.beginPath(),this.ctx.lineWidth=n.lineWeight.options[t].value,this.ctx.strokeStyle=n.strokeColor.value,this.ctx.fillStyle=n.fillColor.value,"rect"===e)this.ctx.rect(this.startX,this.startY,this.endX-this.startX,this.endY-this.startY);else{var r=Math.abs(this.endX-this.startX),i=Math.abs(this.endY-this.startY),o=r>i?r:i;this.ctx.arc(this.startX,this.startY,o,0,2*Math.PI)}this.ctx.fill(),this.ctx.stroke()}}]),e}(),f=function(){var e=document.createElement("canvas");e.className="drawing-tool__canvas drawing-tool__canvas--"+l.length,n.canvasList.appendChild(e),e.setAttribute("width",s),e.setAttribute("height",a),l.push(e),c.initLayer(e)},m=function(){l.forEach(function(e,t){u.drawImage(e,0,0),t>0&&n.canvasList.removeChild(e)}),l=l.slice(0,1)},p=t.customizeColorPicker=function(e,t){t.style.backgroundColor=e.value},g=function(e){for(var t=0;t<n.toolsList.length;t++)n.toolsList[t].classList.remove(o);e.parentElement.classList.add(o);var r=x();n.canvasList.style.cursor="rect"===r||"circle"===r?"crosshair":"default"},x=function(){return n.tools.querySelector(".input:checked").value},L=function(){return l.length-1},k=t.getMousePosition=function(e){var t=e.target.getBoundingClientRect();return{x:e.clientX-t.left,y:e.clientY-t.top}},y=function(){n.save.classList.remove("disabled"),n.clear.classList.remove("disabled"),n.save.addEventListener("click",Y),n.clear.addEventListener("click",P)},b=function(){n.save.classList.add("disabled"),n.clear.classList.add("disabled"),n.save.removeEventListener("click",Y),n.clear.removeEventListener("click",P)},E=function(e){var t=k(e);if(c=new v(t.x,t.y),"rect"===d||"circle"===d)f();else{var r=x();("rect"===r||"circle"===r||L()<0)&&f()}var i=L();l[i].addEventListener("mouseup",w),l[i].addEventListener("mouseout",w),l[i].addEventListener("mousemove",C)},C=function(e){var t=k(e);switch(c.endX=t.x,c.endY=t.y,x()){case"pencil":c.drawDot(n.strokeColor.value);break;case"eraser":c.drawDot(n.fillColor.value);break;case"rect":c.drawShapes("rect");break;case"circle":c.drawShapes("circle");break;default:return"Unknown tool"}y(),d=x()},w=function e(){var t=L();l[t].removeEventListener("mouseup",e),l[t].removeEventListener("mouseout",e),l[t].removeEventListener("mousemove",C)},S=function(e){p(e.target,e.target.parentElement)},X=function(e){"radio"===e.target.type&&g(e.target)},Y=function(e){m(),e.target.href=l[0].toDataURL()},P=function(){m(),l[0]&&n.canvasList.removeChild(l[0]),l=[],b()};p(n.strokeColor,n.strokeColor.parentElement),p(n.fillColor,n.fillColor.parentElement),n.toolPencil.checked=!0,g(n.toolPencil),b(),n.strokeColor.addEventListener("change",S),n.fillColor.addEventListener("change",S),n.tools.addEventListener("click",X),n.canvasList.addEventListener("mousedown",E)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,